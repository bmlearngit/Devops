{

	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "VPC template",
	
	"Metadata": {},
	
	
	"Parameters": {
		
		"VPCCIDR": {
			"Type": "String",
			"Description": "Specify the CIDR for VPC to be created",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
			"Default": "10.10.0.0/24"			
		}
	},

	
	"Conditions": {},

	
	"Rules": {},
	
	
	"Mappings": {},
	
	
	"Resources": {
		
		
		"VPC" :{
		"Type" : "AWS::EC2::VPC",
		"Properties" : {
			"CidrBlock" : {"Ref": "VPCCIDR" },
			"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "vpc", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		
		},

		"PublicSubnet1": {
		"Type": "AWS::EC2::Subnet",
		"Properties": {
			"VpcId": { "Ref": "VPC" },
			"AvailabilityZone": { "Fn::Select": [ "0", { "Fn::GetAZs": "" } ] },
			"CidrBlock": {"Fn::Select": [ 0,{ "Fn::Cidr": [ { "Fn::GetAtt": [ "VPC", "CidrBlock" ] }, 4, 5 ]}]},
			"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "public-subnet1", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		},
		

		"PublicSubnet2": {
		"Type": "AWS::EC2::Subnet",
		"Properties": {
			"VpcId": { "Ref": "VPC" },
			"AvailabilityZone": { "Fn::Select": [ "1", { "Fn::GetAZs": "" } ] },
			"CidrBlock": {"Fn::Select": [ 1,{ "Fn::Cidr": [ { "Fn::GetAtt": [ "VPC", "CidrBlock" ] }, 4, 5 ]}]},
			"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "public-subnet2", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		},



		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
			"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "internetgw", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		},
		
		
		"InternetGatewayAttachment": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"InternetGatewayId": {"Ref": "InternetGateway"}
			}
		},
		"PublicRouteTable1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "public-routetable1", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		},
		"PublicRouteTable2": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {"Ref": "VPC" },
			"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "public-routetable2", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		},
		"PublicRoute1": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref": "PublicRouteTable1" },
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {"Ref": "InternetGateway"}
			}
		},
		"PublicRoute2": {
			"DependsOn": "InternetGatewayAttachment",
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {"Ref": "PublicRouteTable2"},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {"Ref": "InternetGateway"}
			}
		},
		"PublicSubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "PublicSubnet1"},
				"RouteTableId": {"Ref": "PublicRouteTable1"}
			}
		},
		"PublicSubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {"Ref": "PublicSubnet2"	},
				"RouteTableId": {"Ref": "PublicRouteTable2"}
			}
		},
		"PublicNACL": {
			"Type": "AWS::EC2::NetworkAcl",
			"Properties": {
				"VpcId": {"Ref": "VPC"},
				"Tags": [	{ "Key": "Name", "Value": { "Fn::Join": [ "-", [ "public-nacl", { "Ref": "AWS::StackName" } ] ] } } ]
			}
		},
		"PublicNACLInboundEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {"Ref": "PublicNACL"},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"PublicNACLOutboundEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {"Ref": "PublicNACL"},
				"RuleNumber": "100",
				"Protocol": "-1",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"PublicSubnetNACLAssociation1": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "PublicSubnet1"},
				"NetworkAclId": {"Ref": "PublicNACL"}
			}
		},
		"PublicSubnetNACLAssociation2": {
			"Type": "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties": {
				"SubnetId": {"Ref": "PublicSubnet2"},
				"NetworkAclId": {"Ref": "PublicNACL"}
			}
		}
		
	
	
	
	
	
},
	
	
	
"Outputs": {}
	


}
